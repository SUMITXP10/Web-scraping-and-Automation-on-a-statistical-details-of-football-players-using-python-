# -*- coding: utf-8 -*-
"""WEB SCRAPING USING PYTHON  PROJECT 01 , NAME : SUMIT RANJAN SATAPATHY.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1eeA2w4p0dzWStL6lRoXC_-Az-TpRnLbt

# **WEB SCRAPING DATASET URL LINK : https://sofifa.com/players**

# **WEB SCRAPING DATASET [ CSV ] LINK : https://raw.githubusercontent.com/SUMITXP10/WEB-SCRAPING-AND-AUTOMATION-USING-PYTHON-BOOTCAMP-PROJECT-CSV-FILE-01/main/sumitfifa.csv**
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import requests as rq
from time import sleep
from random import randint
from bs4 import BeautifulSoup

"""# **10 Pages :**

# **1st Page :**

https://sofifa.com/players

# **OR**

https://sofifa.com/players?offset=0

# **2nd Page :**

https://sofifa.com/players?offset=60

# **3rd Page :**

https://sofifa.com/players?offset=120

# **4th Page :**

https://sofifa.com/players?offset=180

# **5th Page :**

https://sofifa.com/players?offset=240

# **6th Page :** 

https://sofifa.com/players?offset=300

# **7th Page** :

https://sofifa.com/players?offset=360

# **8th Page :**

https://sofifa.com/players?offset=420

# **9th Page :**

https://sofifa.com/players?offset=480

# **10th Page :**

https://sofifa.com/players?offset=540
"""

headers = {"Accept-Language": "en-US,en;q=0.5"}

url01 = 'https://sofifa.com/players'

sumitresp01 = rq.get( url01 )

sumitresp01

sumitresp01.content

sumitsoup01 = BeautifulSoup( sumitresp01.content, 'lxml' )

sumitsoup01

sumit_data01 = sumitsoup01.findAll('tbody', attrs = {'class': 'list'})

sumit_data01

names01 = sumitsoup01.find('a', class_ = "tooltip").text

names01

age01 = sumitsoup01.find('td', class_= "col col-ae"  ).text.replace('\n', '')

age01

overall_rating01 = sumitsoup01.find('td', class_="col col-oa").text.replace('\n', '')

overall_rating01

potential01 = sumitsoup01.find('td', class_="col col-pt" ).text.replace('\n', '')

potential01

team_name01 = sumitsoup01.find('div', attrs = {'class': 'bp3-text-overflow-ellipsis'}).text.replace('\n', '')

team_name01

contract_year01 = sumitsoup01.find('div', class_ = "sub").text.replace('\n', '')

contract_year01

value01 = sumitsoup01.find('td', class_ = "col col-vl").text.replace('\n', '')

value01

wage01 = sumitsoup01.find('td', class_ = "col col-wg").text.replace('\n', '')

wage01

total_stats01 = sumitsoup01.find('span', class_ = "bp3-tag p").text.replace('\n', '')

total_stats01

for i in range(0,600,60):
  print(f'https://sofifa.com/players?offset={i}')

for i in range(0,600,60):
  url = f'https://sofifa.com/players?offset={i}'

sumit = [0, 60, 120, 180, 240, 300, 360, 420, 480, 540]

for i in sumit :
    print( f'https://sofifa.com/players?offset=0' )

NAME = []
AGE = []
OVA = []
POT = []
TEAM_NAME = []
CONTRACT = []
VALUE = []
WAGE = []
TOTAL_STATS = []

for i in sumit :
  
    url = f'https://sofifa.com/players?offset={i}'
    sumitresp = rq.get( url )
    sumitsoup = BeautifulSoup( sumitresp.content , 'lxml' )
    sumit_data = sumitsoup.findAll('tbody', attrs = {'class': 'list'})
    
    for name in sumit_data :

        names = name.find('a', class_ = "tooltip").text
        NAME.append(names)

        age = name.find('td', class_= "col col-ae"  ).text.replace('\n', '')
        AGE.append(age)
        
        overall_rating = name.find('td', class_="col col-oa").text.replace('\n', '')
        OVA.append(overall_rating)
        
        potential = name.find('td', class_="col col-pt" ).text.replace('\n', '')
        POT.append(potential)
        
        team_name = name.find('div', attrs = {'class': 'bp3-text-overflow-ellipsis'}).text.replace('\n', '')
        TEAM_NAME.append(team_name)

        contract_year = name.find('div', class_ = "sub").text.replace('\n', '')
        CONTRACT.append(contract_year)

        value = name.find('td', class_ = "col col-vl").text.replace('\n', '')
        VALUE.append(value)

        wage = name.find('td', class_ = "col col-wg").text.replace('\n', '')
        WAGE.append(wage) 

        total_stats = name.find('span', class_ = "bp3-tag p").text.replace('\n', '')
        TOTAL_STATS.append(total_stats)

sumit01 = pd.DataFrame({"Name": NAME,
                   "Age": AGE,
                   "Overall_Rating": OVA,
                   "Potential": POT,
                   "Team_Name": TEAM_NAME,
                   "Contract_Year": CONTRACT,
                   "Value(M)": VALUE,
                   "Wage(K)": WAGE,
                   "Total_Stats": TOTAL_STATS})

sumit01.to_csv('sumitfifa.csv')

sumit01.to_excel("sumitfifaxp.xlsx")

type( sumit01 )

sumit01

sumit01.ndim

sumit01.shape

sumit01.columns

sumit01.head(10)

sumit01.tail(10)

sumit01.describe()

sumit01.info()

sumit01.isnull().sum()

sumit01.isnull().sum().sum()

sns.heatmap(sumit01.isnull())

sumit01['Name'].value_counts()

sns.countplot('Name', data = sumit01)

base_color = sns.color_palette()[ 1 ]
gen_order = sumit01['Name'].value_counts().index
sns.countplot( data = sumit01 , x = 'Name', color = base_color , order = gen_order )

sumit01['Age'].value_counts()

sns.countplot('Age', data = sumit01)

base_color = sns.color_palette()[ 2 ]
gen_order = sumit01['Age'].value_counts().index
sns.countplot( data = sumit01 , x = 'Age', color = base_color , order = gen_order )

sumit01['Overall_Rating'].value_counts()

sns.countplot('Overall_Rating', data = sumit01)

base_color = sns.color_palette()[ 3 ]
gen_order = sumit01['Overall_Rating'].value_counts().index
sns.countplot( data = sumit01 , x = 'Overall_Rating', color = base_color , order = gen_order )

sumit01['Potential'].value_counts()

sns.countplot('Potential', data = sumit01)

base_color = sns.color_palette()[ 4 ]
gen_order = sumit01['Potential'].value_counts().index
sns.countplot( data = sumit01 , x = 'Potential', color = base_color , order = gen_order )

sumit01['Team_Name'].value_counts()

sns.countplot('Team_Name', data = sumit01)

base_color = sns.color_palette()[ 5 ]
gen_order = sumit01['Team_Name'].value_counts().index
sns.countplot( data = sumit01 , x = 'Team_Name', color = base_color , order = gen_order )

sumit01['Contract_Year'].value_counts()

sns.countplot('Contract_Year', data = sumit01)

base_color = sns.color_palette()[ 6 ]
gen_order = sumit01['Contract_Year'].value_counts().index
sns.countplot( data = sumit01 , x = 'Contract_Year', color = base_color , order = gen_order )

sumit01['Value(M)'].value_counts()

sns.countplot('Value(M)', data = sumit01)

base_color = sns.color_palette()[ 7 ]
gen_order = sumit01['Value(M)'].value_counts().index
sns.countplot( data = sumit01 , x = 'Value(M)', color = base_color , order = gen_order )

sumit01['Wage(K)'].value_counts()

sns.countplot('Wage(K)', data = sumit01)

base_color = sns.color_palette()[ 8 ]
gen_order = sumit01['Wage(K)'].value_counts().index
sns.countplot( data = sumit01 , x = 'Wage(K)', color = base_color , order = gen_order )

sumit01['Total_Stats'].value_counts()

sns.countplot('Total_Stats', data = sumit01)

base_color = sns.color_palette()[ 9 ]
gen_order = sumit01['Total_Stats'].value_counts().index
sns.countplot( data = sumit01 , x = 'Total_Stats', color = base_color , order = gen_order )